# Service name
service: hotel-reservation-api

# Framework version constraint
frameworkVersion: '3'

# Custom parameters per environment
custom:
  apiGatewayQuota:
    prod: 20000
    staging: 5000
    dev: 5000
  dynamoDbCapacityUnits:
    prod: 5
    staging: 1
    dev: 1
  lambdaMemorySize:
    prod: 512
    staging: 128
    dev: 128
  myStage: ${opt:stage, self:provider.stage}
  upperStage:
    prod: PROD
    staging: STAGING
    dev: DEV
  esbuild:
    bundle: true
    minify: false
    exclude: ['aws-sdk']
    target: 'node16'
    platform: 'node'
    concurrency: 10
# serverless-dynamodb-local configuration
  dynamodb:
    start:
      port: 3000
      inMemory: true
      migrate: true
    stages: dev
# serverless-prune-plugin configuration
  prune:
    automatic: true
    number: 3

provider:
  name: aws
  runtime: nodejs16.x

  # Default stage
  stage: ${opt:stage, 'dev'}

  # Default region
  region: us-east-1

  # Project tags
  stackTags:
    Project: Hotel California
    ServiceName: Hotel California - Reservation

  # Environment variables
  environment:
    RESERVATION_TABLE: hotel-reservation-api-${self:custom.myStage}
    STAGE: ${self:custom.myStage}

package:
  individually: true
  excludeDevDependencies: true

# Project Lambda functions
functions:
  CreateReservation: ${file(src/functions/reservation/create/index.yml):CreateReservation}
  DeleteReservation: ${file(src/functions/reservation/delete/index.yml):DeleteReservation}
  GetReservation: ${file(src/functions/reservation/get/index.yml):GetReservation}
  UpdateReservation: ${file(src/functions/reservation/update/index.yml):UpdateReservation}

# Custom resources
resources:
  Resources:
    # DynamoDB reservation table
    TableReservations:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: hotel-reservation-api-${self:custom.myStage}
        AttributeDefinitions:
          - AttributeName: reservationId
            AttributeType: S
        KeySchema:
          - AttributeName: reservationId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.dynamoDbCapacityUnits.${self:custom.myStage}}
          WriteCapacityUnits: ${self:custom.dynamoDbCapacityUnits.${self:custom.myStage}}

# Plugins
plugins:
  - serverless-dynamodb-local
  - serverless-esbuild
  - serverless-iam-roles-per-function
  - serverless-offline
  - serverless-prune-plugin
  - serverless-stack-termination-protection

service: hotel-reservation-api
frameworkVersion: '3'

custom:
  apiGatewayQuota:
    prod: 20000
    staging: 5000
    dev: 5000
  dynamoDbCapacityUnits:
    prod: 5
    staging: 1
    dev: 1
  lambdaMemorySize:
    prod: 512
    staging: 128
    dev: 128
  myStage: ${opt:stage, self:provider.stage}
  upperStage:
    prod: PROD
    staging: STAGING
    dev: DEV
  esbuild:
    bundle: true
    minify: false
    exclude: ['aws-sdk']
    target: 'node16'
    platform: 'node'
    concurrency: 10
  dynamodb:
    start:
      port: 3000
      inMemory: true
      migrate: true
    stages: dev
  prune:
    automatic: true
    number: 3

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  stackTags:
    Project: Hotel California
    ServiceName: Hotel California - Reservation
  apiGateway:
    usagePlan:
      quota:
        limit: ${self:custom.apiGatewayQuota.${self:custom.myStage}}
        offset: 2
        period: MONTH
      throttle:
        burstLimit: 200
        rateLimit: 100
  environment:
    RESERVATION_TABLE: hotel-reservation-api-${self:custom.myStage}
    STAGE: ${self:custom.myStage}

package:
  individually: true
  excludeDevDependencies: true
  include:
    - '../node_modules/**'
    - '../package.json'

functions:
  CreateReservation: ${file(src/functions/reservation/create/index.yml):CreateReservation}
  DeleteReservation: ${file(src/functions/reservation/delete/index.yml):DeleteReservation}
  GetReservation: ${file(src/functions/reservation/get/index.yml):GetReservation}
  UpdateReservation: ${file(src/functions/reservation/update/index.yml):UpdateReservation}

resources:
  Resources:
    TableReservations:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: hotel-reservation-api-${self:custom.myStage}
        AttributeDefinitions:
          - AttributeName: reservationId
            AttributeType: S
        KeySchema:
          - AttributeName: reservationId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.dynamoDbCapacityUnits.${self:custom.myStage}}
          WriteCapacityUnits: ${self:custom.dynamoDbCapacityUnits.${self:custom.myStage}}

plugins:
  - serverless-dynamodb-local
  - serverless-esbuild
  - serverless-iam-roles-per-function
  - serverless-offline
  - serverless-prune-plugin
  - serverless-stack-termination-protection
